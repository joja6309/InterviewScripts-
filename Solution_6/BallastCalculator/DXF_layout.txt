
Appendix A -- Drawing Interchange File Formats
 ASCII DXF Files 
  General DXF File Structure
Essentially a DXF file is composed of pairs of codes and associated values. The codes, known as group codes, indicate the type of value that follows. Using these group code and value pairs, a DXF file is organized into sections, composed of records, which are composed of a group code and a data item. Each group code and value is on its own line in the DXF file.

Each section starts with a group code 0 followed by the string, SECTION. This is followed by a group code 2 and a string indicating the name of the section (for example, HEADER). Each section is composed of group codes and values that define its elements. A section ends with a 0 followed by the string ENDSEC.

It may be helpful to produce a DXF file from a small drawing, print it out, and refer to it while reading the information presented in this section.

The overall organization of a DXF file is as follows:

HEADER section. Contains general information about the drawing. It consists of an AutoCAD database version number and a number of system variables. Each parameter contains a variable name and its associated value.
CLASSES section. Holds the information for application-defined classes, whose instances appear in the BLOCKS, ENTITIES, and OBJECTS sections of the database. A class definition is permanently fixed in class hierarchy.
TABLES section. Contains definitions for the following symbol tables.
APPID (application identification table)
BLOCK_RECORD (block reference table)
DIMSTYLE (dimension style table)
LAYER (layer table)
LTYPE (linetype table)
STYLE (text style table)
UCS (User Coordinate System table)
VIEW (view table)
VPORT (viewport configuration table)
BLOCKS section. Contains block definition and drawing entities that make up each block reference in the drawing.
ENTITIES section. Contains the graphical objects (entities) in the drawing, including block references (insert entities).
OBJECTS section. Contains the nongraphical objects in the drawing. All objects that are not entities or symbol table records or symbol tables are stored in this section. Examples of entries in the OBJECTS section are dictionaries that contain mline styles and groups.
THUMBNAILIMAGE section. Contains the preview image data for of the drawing. This section is optional.
If you use the Select Objects option of the SAVE and SAVEAS commands, the resulting DXF file contains only the ENTITIES section and the EOF marker. The ENTITIES section contains only the objects you select for output. If you select an insert entity, the corresponding block definition is not included in the output file.



DXF Group Codes
 BLOCKS Section 
  Blocks in DXF Files
The BLOCKS section of the DXF file contains all the block definitions. It contains the entities that make up the blocks used in the drawing, including anonymous blocks generated by the HATCH command and by associative dimensioning. The format of the entities in this section is identical to those in the ENTITIES section. All entities in the BLOCKS section appear between block and endblk entities. Block and endblk entities appear only in the BLOCKS section. Block definitions are never nested (that is, no block or endblk entity ever appears within another block-endblk pair), although a block definition can contain an insert entity.

External references are written in the DXF file as block definitions, except that they also include a string (group code 1) that specifies the path and file name of the external reference.

The block table handle, along with any xdata and persistent reactors, appears in each block definition immediately following the BLOCK record, which contains all of the specific information that a block table record stores. Therefore, each block definition has the following sequence of records:

The following is an example of the BLOCKS section of a DXF file:
  0
SECTION
  2
BLOCKS


Beginning of BLOCKS section 




  0
BLOCK
  5
<handle>
100
AcDbEntity
  8
<layer>
100
AcDbBlockBegin
  2
<block name>
70
<flag>
10
<X value>
20
<Y value>
30
<Z value>
  3
<block name>
  1
<xref path>


Begins each block entry  
(a block entity definition)





















  0
<entity type>
.
. <data>
.


One entry for each entity definition within the block




  0
ENDBLK
  5
<handle>
100
AcDbBlockEnd


End of each block entry 
(an endblk entity definition)





  0
ENDSEC


End of BLOCKS section 


